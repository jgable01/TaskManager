@model TaskManager.Models.Project

@{
    ViewData["Title"] = "Project Details";
    var isAdmin = User.IsInRole("Administrator");
    var isProjectManager = User.IsInRole("ProjectManager");
    var isDeveloper = User.IsInRole("Developer");
}

<h1>Project: @Model.Title</h1>

<div class="card mb-3">
    <div class="card-header">Details</div>
    <div class="card-body">
        <h5 class="card-title">@Model.Title</h5>
        <p class="card-text">Manager: @Model.Manager.Email</p>
        <p class="card-text">Number of Tasks: @Model.Tasks.Count</p>
        <p class="card-text">
            Developers:
            @foreach (var dev in Model.ProjectDevelopers)
            {
                @dev.User.Email
                ;
                if (!dev.Equals(Model.ProjectDevelopers.Last()))
                {
                    @: ,
                }
            }
        </p>
        <h6>Tasks:</h6>
        <ul>
            @foreach (var task in Model.Tasks)
            {
                <li>@task.Title - Priority: @task.Priority</li>
            }
        </ul>
    </div>
</div>

<div class="mb-3">
    @if (isAdmin || isProjectManager)
    {
        <a asp-action="AllocateDevelopers" asp-route-id="@Model.ProjectId" class="btn btn-info">Allocate Developers</a>
        <a asp-action="Index" class="btn btn-secondary">Back to Project List</a>
        <a asp-action="Tasks" asp-route-id="@Model.ProjectId" class="btn btn-warning">View Tasks</a>
    }
    @if (isDeveloper)
    {
        <a asp-action="MyTasks" class="btn btn-warning">View My Tasks</a>
        <a asp-action="MyProjects" class="btn btn-secondary">Back to My Projects</a>
    }
</div>
